// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"echoProject/main/app/controller/city"
	"echoProject/main/domain/controller"
	"echoProject/main/infra/datasource"
	"echoProject/main/infra/repository/city"
	"echoProject/main/infra/things/sqlboiler"
	"echoProject/main/usecase/city"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeController() (*ControllersSet, error) {
	sqlBoiler := sqlboiler.NewSQLBoilerImpl()
	city := ds.NewCityDataSource(sqlBoiler)
	repoIFCity := repocity.NewCityRepository(city)
	ucIFCity := uccity.NewCityService(repoIFCity)
	ctrIFCity := ctrcity.NewCityController(ucIFCity)
	controllersSet := &ControllersSet{
		CityController: ctrIFCity,
	}
	return controllersSet, nil
}

func InitializeDB() (*initializeDBSet, error) {
	sqlBoiler := sqlboiler.NewSQLBoilerImpl()
	diInitializeDBSet := &initializeDBSet{
		SqlBoiler: sqlBoiler,
	}
	return diInitializeDBSet, nil
}

// wire.go:

var infrastructureSet = wire.NewSet(ds.NewCityDataSource, sqlboiler.NewSQLBoilerImpl)

var repositorySet = wire.NewSet(repocity.NewCityRepository)

var usecaseSet = wire.NewSet(uccity.NewCityService)

var controllerSet = wire.NewSet(ctrcity.NewCityController)

type ControllersSet struct {
	CityController ctrIF.City
}

type initializeDBSet struct {
	SqlBoiler sqlboiler.SQLBoiler
}
